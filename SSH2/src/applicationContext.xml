<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation=
	"http://www.springframework.org/schema/beans
	 http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	 http://www.springframework.org/schema/aop      
     http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
     http://www.springframework.org/schema/tx 
     http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
	 http://www.springframework.org/schema/context      
     http://www.springframework.org/schema/context/spring-context-3.1.xsd">

	<!-- 用注解方式配置 -->
	<context:annotation-config/>
	<!-- 在这个包下寻找bean -->
	<context:component-scan base-package="com.ssh"/>
	
	
    
    <!-- 数据库连接 -->
    <bean id="dataSource"
    	class="org.apache.commons.dbcp.BasicDataSource"
    	destroy-method="close">
    	
    	<property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <property name="url" value="jdbc:mysql://localhost:3306/ssh?characterEncoding=UTF-8" />
        <property name="username" value="root" />
        <property name="password" value="123456" />
    </bean>
    
    
    <!-- 初始化SessionFactory -->
    <bean name="sessionFactory"
        class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <!-- 
        <property name="annotatedClasses">
            <list>
                <value>com.spring.model.User</value>
                <value>com.spring.model.Log</value>
            </list>
        </property>
         -->
         <!-- 扫描这个包下的所有类，这样就不用一个个配置了 -->
        <property name="packagesToScan">
            <list>
                <value>com.ssh.model</value>
            </list>
        </property>
        
        <property name="hibernateProperties">
            <value>
                hibernate.dialect=org.hibernate.dialect.MySQLDialect
                hibernate.show_sql=true
                hbm2ddl.auto=update
            </value>
        </property>
    </bean>    
    
   
    
    <!-- 提供事物管理 -->
    <bean id="txManager"
    	class="org.springframework.orm.hibernate4.HibernateTransactionManager">
    	<property name="sessionFactory" ref ="sessionFactory"/>
    </bean>
    <!-- Annotation方法 -->
    <!--  <tx:annotation-driven transaction-manager="txManager"/> -->
    
    <!-- xml方法 -->
    <tx:advice id="txAdvice" transaction-manager="txManager">  
	    <tx:attributes>  
	        <tx:method name="add*" propagation="REQUIRED"/>  
	        <tx:method name="getUsers*" propagation="REQUIRED"/>  
	    </tx:attributes>  
	</tx:advice> 
    
    <aop:config>  
   		 <aop:pointcut id="serviceMethod" expression="execution(* com.ssh.service..*.*(..))"/>  
   		 <aop:advisor pointcut-ref="serviceMethod" advice-ref="txAdvice"/>  
	</aop:config>   
    
    
    
    
    
    
    <!-- 找到被注解的切面类，进行切面配置    aop Annotation方法-->
	<!-- <aop:aspectj-autoproxy/>   -->


	<!-- aop xml方法 -->
	<!-- 
	<bean id="logInterceptor" class="com.spring.aop.LogInterceptor"/>
	<aop:config>
		<aop:pointcut id="logPointcut"
		expression="execution(* com.spring.service..*.*(..))"/>
		
		<aop:aspect id="logAspect" ref="logInterceptor">
			<aop:before method="before" pointcut-ref="logPointcut"/>
		</aop:aspect>
	</aop:config>
    -->
	<!-- IOC/DI xml方式 -->
	<!-- 
	<bean id="u" class="com.spring.dao.impl.UserDAOImpl"/>
	<bean id="userService" class="com.spring.service.UserService">
		<property name="userDAO" ref="u"/>
	</bean>
    -->
    
    <!-- 模板 -->
    <!-- 
    <bean id="hibernateTemplate" 
    	class="org.springframework.orm.hibernate3.HibernateTemplate">
    	<property name="sessionFactory" ref="sessionFactory"/>
    </bean>
     -->
     
</beans>